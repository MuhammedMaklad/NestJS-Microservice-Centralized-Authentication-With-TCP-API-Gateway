services:
  auth:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth
    environment:
      - NODE_ENV=development
    networks:
      - app-network
  gateway:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile.dev
    ports:
      - '3001:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev gateway
    environment:
      - NODE_ENV=development
    networks:
      - app-network

  user:
    build:
      context: .
      dockerfile: apps/user/Dockerfile.dev
    ports:
      - '3002:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev user
    environment:
      - NODE_ENV=development
    networks:
      - app-network

  database:
    container_name: postgresql-database
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - postgresql-database-volume:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin']
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  postgresql-database-volume:
